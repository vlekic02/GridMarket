// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/orders/": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Returns hello",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Create a new order",
                "parameters": [
                    {
                        "description": "Order request",
                        "name": "orderRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.OrderRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "jsonapi.ErrorObject": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code is an application-specific error code, expressed as a string value.",
                    "type": "string"
                },
                "detail": {
                    "description": "Detail is a human-readable explanation specific to this occurrence of the problem. Like title, this fieldâ€™s value can be localized.",
                    "type": "string"
                },
                "id": {
                    "description": "ID is a unique identifier for this particular occurrence of a problem.",
                    "type": "string"
                },
                "meta": {
                    "description": "Meta is an object containing non-standard meta-information about the error.",
                    "type": "object",
                    "additionalProperties": true
                },
                "status": {
                    "description": "Status is the HTTP status code applicable to this problem, expressed as a string value.",
                    "type": "string"
                },
                "title": {
                    "description": "Title is a short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.",
                    "type": "string"
                }
            }
        },
        "model.ErrorResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jsonapi.ErrorObject"
                    }
                }
            }
        },
        "model.OrderRequest": {
            "type": "object",
            "required": [
                "application",
                "method",
                "user"
            ],
            "properties": {
                "application": {
                    "type": "integer"
                },
                "method": {
                    "enum": [
                        0,
                        1
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.PaymentMethod"
                        }
                    ]
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "model.PaymentMethod": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-varnames": [
                "Balance",
                "Paypal"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "GridMarket",
	Description:      "Order-service api documentation",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
