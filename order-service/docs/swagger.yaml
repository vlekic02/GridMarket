definitions:
  docs.Order:
    properties:
      attributes:
        $ref: '#/definitions/docs.OrderAttributes'
      id:
        type: integer
      relationships:
        $ref: '#/definitions/docs.OrderRelations'
      type:
        example: order
        type: string
    type: object
  docs.OrderAttributes:
    properties:
      date:
        type: string
      method:
        $ref: '#/definitions/model.PaymentMethod'
    type: object
  docs.OrderRelations:
    properties:
      application:
        $ref: '#/definitions/model.Application'
      user:
        $ref: '#/definitions/model.User'
    type: object
  jsonapi.ErrorObject:
    properties:
      code:
        description: Code is an application-specific error code, expressed as a string
          value.
        type: string
      detail:
        description: Detail is a human-readable explanation specific to this occurrence
          of the problem. Like title, this fieldâ€™s value can be localized.
        type: string
      id:
        description: ID is a unique identifier for this particular occurrence of a
          problem.
        type: string
      meta:
        additionalProperties: true
        description: Meta is an object containing non-standard meta-information about
          the error.
        type: object
      status:
        description: Status is the HTTP status code applicable to this problem, expressed
          as a string value.
        type: string
      title:
        description: Title is a short, human-readable summary of the problem that
          SHOULD NOT change from occurrence to occurrence of the problem, except for
          purposes of localization.
        type: string
    type: object
  model.Application:
    properties:
      id:
        type: integer
    type: object
  model.ErrorResponse:
    properties:
      errors:
        items:
          $ref: '#/definitions/jsonapi.ErrorObject'
        type: array
    type: object
  model.OrderRequest:
    properties:
      application:
        type: integer
      method:
        allOf:
        - $ref: '#/definitions/model.PaymentMethod'
        enum:
        - 0
        - 1
      user:
        type: integer
    required:
    - application
    - method
    type: object
  model.PaymentMethod:
    enum:
    - 0
    - 1
    type: integer
    x-enum-varnames:
    - Balance
    - Paypal
  model.User:
    properties:
      id:
        type: integer
    type: object
info:
  contact: {}
  description: Order-service api documentation
  title: GridMarket
  version: "1.0"
paths:
  /v1/orders/:
    get:
      parameters:
      - description: User id
        in: query
        name: user
        type: integer
      - description: Application id
        in: query
        name: application
        type: integer
      produces:
      - application/vnd.api+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.Order'
      summary: Returns orders
      tags:
      - Order
    post:
      consumes:
      - application/json
      parameters:
      - description: Order request
        in: body
        name: orderRequest
        required: true
        schema:
          $ref: '#/definitions/model.OrderRequest'
      produces:
      - application/vnd.api+json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "504":
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Create a new order
      tags:
      - Order
swagger: "2.0"
